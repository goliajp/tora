name: Release Workflow

on:
  push:
    branches:
      - develop
  create:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            yarn build:linux
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            yarn build:mac
          fi

      - name: Zip the build
        id: zip_build
        run: |
          PLATFORM=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m)
          VERSION=$(jq -r .version package.json)
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            FILENAME="electron-tora-${PLATFORM}-${ARCH}-${VERSION}.zip"
            DIR="linux-unpacked"
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            FILENAME="electron-tora-${PLATFORM}-${ARCH}-${VERSION}.zip"
            DIR="mac-unpacked"
          fi
          zip -r $FILENAME ./dist/$DIR
          echo "::set-output name=FILENAME::$FILENAME"
        shell: /usr/bin/bash -e {0}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Upload to S3
        run: |
          aws s3 cp ./${{ steps.zip_build.outputs.FILENAME }} s3://cdn-golia/downloads/electron-tora/${{ steps.zip_build.outputs.FILENAME }}